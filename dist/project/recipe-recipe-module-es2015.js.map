{"version":3,"sources":["./src/app/auth/auth-guard.service.ts","./src/app/recipe/recipe-detail/recipe-detail.component.ts","./src/app/recipe/recipe-detail/recipe-detail.component.html","./src/app/recipe/recipe-edit/recipe-edit.component.ts","./src/app/recipe/recipe-edit/recipe-edit.component.html","./src/app/recipe/recipe-list/recipe-item/recipe-item.component.ts","./src/app/recipe/recipe-list/recipe-item/recipe-item.component.html","./src/app/recipe/recipe-list/recipe-list.component.ts","./src/app/recipe/recipe-list/recipe-list.component.html","./src/app/recipe/recipe-list/recipe.model.ts","./src/app/recipe/recipe-routing.module.ts","./src/app/recipe/recipe-start/recipe-start.component.ts","./src/app/recipe/recipe-start/recipe-start.component.html","./src/app/recipe/recipe.component.ts","./src/app/recipe/recipe.component.html","./src/app/recipe/recipe.module.ts","./src/app/shared/recipe-resolver.service.ts"],"names":[],"mappings":"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","file":"recipe-recipe-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate  , Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private authService : AuthService, private router : Router) { }\n\n  canActivate(\n    route : ActivatedRouteSnapshot, \n    router : RouterStateSnapshot) : \n    boolean | UrlTree | Promise<boolean | UrlTree> | Observable<boolean | UrlTree> {\n      return this.authService.user.pipe(\n        take(1),\n        map(user => {\n        const isAuth = user ? true : false;\n        if(isAuth){\n          return true;\n        }\n        return this.router.createUrlTree(['auth']);\n      }))\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { ShoppingServiceService } from 'src/app/shopping-list/shopping-service.service';\nimport { Recipe } from '../recipe-list/recipe.model';\nimport { RecipeServiceService } from '../recipe-service.service';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n  recipe : Recipe;\n  id : number;\n  constructor(private shoppingService : ShoppingServiceService,\n              private recipeServie : RecipeServiceService,\n              private route : ActivatedRoute,\n              private router : Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params : Params) => {\n        this.id = +params['id']\n        this.recipe = this.recipeServie.getRecipebyId(this.id);\n      }\n    )\n  }\n\n  toShoppingList(){\n    this.shoppingService.addIngredientsFromRecipe(this.recipe.ingredients);\n  }\n\n  deleteRecipe(){\n    this.recipeServie.deleteRecipe(this.id);\n    this.router.navigate(['recipes'])\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <img \n        src=\"{{recipe.imagePath}}\" \n        alt=\"asd\" \n        class=\"img-responsive\"\n        style=\"max-height: 300px;\">\n    </div>\n</div>\n<div class=\"row\">\n    <h1>{{recipe.name}}</h1>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <div class=\"button-group\" appDropdown>\n            <button href=\"#\" class=\"btn btn-primary dropdown-toggle\" role=\"button\">\n                Manage <span class=\"caret\"></span> \n            </button>\n            <ul class=\"dropdown-menu\">\n                <li  style=\"cursor: pointer;\"><a (click)='toShoppingList()'>To Shopping List</a></li>\n                <li  style=\"cursor: pointer;\"><a routerLink=\"edit\">Edit Recipe</a></li>\n                <li  style=\"cursor: pointer;\"><a (click)=\"deleteRecipe()\">Delete Recipe</a></li>\n            </ul>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <p>{{recipe.description}}</p>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <p >Ingredients</p>\n        <ul class=\"list-group\">\n            <li class=\"list-group-item\"\n            *ngFor=\"let ing of recipe.ingredients\">\n                {{ing.name}} - {{ing.amount}}\n            </li>\n        </ul>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Recipe } from '../recipe-list/recipe.model';\nimport { RecipeServiceService } from '../recipe-service.service';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit {\n  id : number;\n  editMode = false;\n  recipeForm : FormGroup;\n  constructor(private route : ActivatedRoute,\n              private recipeService : RecipeServiceService,\n              private router : Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params : Params) => {\n        this.id = params['id'];\n        this.editMode = params['id'] != null;\n        this.initForm();\n      }\n    )\n  }\n\n  onSubmit(){\n    const newRecipe = new Recipe(\n      this.recipeForm.value['name'],\n      this.recipeForm.value['description'],\n      this.recipeForm.value['imagePath'],\n      this.recipeForm.value['ingredients']\n    );\n    console.log(\"Onsubmit\" + newRecipe);\n    if(this.editMode){\n      this.recipeService.updateRecipe(this.id,newRecipe);\n    }\n    else{\n      this.recipeService.addRecipe(newRecipe);\n    }\n    this.router.navigate(['../'],{relativeTo : this.route});\n  }\n\n  onAddIngredient(){\n    (<FormArray>this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        'name' : new FormControl(null, Validators.required),\n        'amount' : new FormControl(null, [\n          Validators.required,\n          Validators.pattern(/^[0-9]+[0-9]*$/)\n        ])\n      })\n    )\n  }\n\n  onRemoveControl(index : number){\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\n  }\n\n  private initForm(){\n    let recipeName = '';\n    let recipeImgPath = '';\n    let description = '';\n    let ingredients = new FormArray([]);\n\n    if(this.editMode){\n      const recipe = this.recipeService.getRecipebyId(this.id);\n      recipeName = recipe.name;\n      recipeImgPath = recipe.imagePath;\n      description = recipe.description;\n      if(recipe['ingredients']){\n        for(let ing of recipe.ingredients){\n          ingredients.push(\n            new FormGroup({\n              'name' : new FormControl(ing.name, Validators.required),\n              'amount' : new FormControl(ing.amount, [\n                Validators.required,\n                Validators.pattern(/^[0-9]+[0-9]*$/)\n              ])\n            })\n          )\n        }\n      }  \n    }\n    this.recipeForm = new FormGroup({\n      'name' : new FormControl(recipeName, Validators.required),\n      'imagePath' : new FormControl(recipeImgPath, Validators.required),\n      'description' : new FormControl(description, Validators.required),\n      'ingredients' : ingredients\n    })\n  }\n\n  get controls() { // a getter!\n    return (<FormArray>this.recipeForm.get('ingredients')).controls;\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <button \n                    class=\"btn btn-success\" \n                    type=\"submit\"\n                    [disabled]=\"!recipeForm.valid\">Save</button>\n                    <button class=\"btn btn-danger\" type=\"button\" routerLink=\"../\">Cancel</button>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Name</label>\n                        <input \n                        type=\"text\" \n                        id=\"name\" \n                        name=\"name\"\n                        formControlName=\"name\"\n                        class=\"form-control\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"form-group\">\n                        <label for=\"imagePath\">Image URL</label>\n                        <input \n                        type=\"text\" \n                        id=\"imagePath\" \n                        name=\"imagePath\"\n                        formControlName=\"imagePath\"\n                        class=\"form-control\"\n                        #imagePath>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <img [src]=\"imagePath.value\" class=\"img-responsive\">\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"form-group\">\n                        <label for=\"description\">Description</label>\n                        <textarea\n                        type=\"text\" \n                        id=\"description\" \n                        name=\"description\"\n                        class=\"form-control\"\n                        formControlName=\"description\"\n                        rows=\"6\">\n                        </textarea>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\" formArrayName=\"ingredients\">\n                    <div \n                        class=\"row\" \n                        *ngFor=\"let ingCtrl of controls; let i = index\"\n                        [formGroupName]=\"i\"\n                        style=\"margin-top: 10px;\">\n                        <div class=\"col-xs-8\">\n                            <input\n                             type=\"text\"\n                             class=\"form-control\"\n                             formControlName=\"name\">\n                        </div>\n                        <div class=\"col-xs-2\">\n                            <input \n                            type=\"number\" \n                            class=\"form-control\"\n                            formControlName=\"amount\">\n                        </div>\n                        <div class=\"col-xs-2\">\n                            <button class=\"btn btn-danger\" type=\"button\" (click)=\"onRemoveControl(i)\">X</button>\n                        </div>\n                    </div>\n                    <hr>\n                    <button class=\"btn btn-success\" (click)=\"onAddIngredient()\" type=\"button\">Add</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Recipe } from '../recipe.model';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n  @Input() recipe : Recipe;\n  @Input() index : number;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"col-md-12\" routerLinkActive=\"active\" >\n    <a style=\"cursor: pointer;\" class=\"list-group-item clearfix\"\n     [routerLink]=\"[index]\"\n    >\n        \n        <div class=\"pull-left\">\n            <h4 class=\"list-group-item-heading\">{{recipe.name}}</h4>\n            <p class=\"list-group-item-text\">{{recipe.description}}</p>\n        </div>\n        <span class=\"pull-right\">\n            <img src=\"{{recipe.imagePath}}\" alt=\"\" class=\"img-responsive\" style=\"max-height: 50px;\">\n        </span>\n    </a>\n</div>\n","import { Component,  OnInit } from '@angular/core';\nimport { RecipeServiceService } from '../recipe-service.service';\nimport { Recipe } from './recipe.model';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit {\n  recipes : Recipe[];\n  isLoading = false;\n  constructor(private recipeService : RecipeServiceService) { }\n\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.recipes = this.recipeService.getRecipes();\n    this.recipeService.recipeChanged.subscribe(\n      (recipes : Recipe[]) =>{\n        this.recipes = recipes;\n      }\n    )\n    this.isLoading = false;\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <button class=\"btn btn-success\" routerLink=\"new\">Add New Recipe</button>\n    </div>\n</div>\n<hr>\n<!-- <div *ngIf=\"isLoading\">\n    <app-spinner></app-spinner>\n</div> -->\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <app-recipe-item \n        *ngFor=\"let recipe of recipes;let i=index\"\n        [recipe] = \"recipe\"\n        [index] = \"i\"></app-recipe-item>\n    </div>\n</div>\n","import { Ingredient } from \"src/app/shared/ingredient.model\";\r\n\r\nexport class Recipe{\r\n    public name: string;\r\n    public description: string;\r\n    public imagePath: string;\r\n    public ingredients : Ingredient[];\r\n\r\n    constructor(name,description,imagePath,ingredients) {\r\n        this.name=name;\r\n        this.description=description;\r\n        this.imagePath=imagePath;\r\n        this.ingredients = ingredients;\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes} from \"@angular/router\";\r\nimport { AuthGuardService } from \"../auth/auth-guard.service\";\r\nimport { RecipeResolverService } from \"../shared/recipe-resolver.service\";\r\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\r\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\r\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\r\nimport { RecipeComponent } from \"./recipe.component\";\r\n\r\nconst routes : Routes = [\r\n    { \r\n    path : '',  \r\n    canActivate : [AuthGuardService],          //array of guards that we want to apply to before accessing the link\r\n    component : RecipeComponent, \r\n    children : [\r\n      { path : '', component : RecipeStartComponent },\r\n      { path : 'new', component : RecipeEditComponent},\r\n      { \r\n      path : ':id', component : RecipeDetailComponent,\r\n      resolve : [RecipeResolverService]\r\n      },\r\n      { \r\n        path : ':id/edit', \r\n        component : RecipeEditComponent,\r\n        resolve : [RecipeResolverService]\r\n      }\r\n    ] \r\n  },\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class RecipeRoutingModule{\r\n\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>Please select a recipe!!</h3>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Recipe } from './recipe-list/recipe.model';\n\n@Component({\n  selector: 'app-recipe',\n  templateUrl: './recipe.component.html',\n  styleUrls: []\n})\nexport class RecipeComponent implements OnInit {\n  selectedRecipe : Recipe;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-5\">\n            <app-recipe-list></app-recipe-list>\n        </div>\n        <div class=\"col-md-7\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\nimport { RecipeItemComponent } from './recipe-list/recipe-item/recipe-item.component';\nimport { RecipeListComponent } from './recipe-list/recipe-list.component';\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\nimport { RecipeComponent } from './recipe.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { RecipeRoutingModule } from './recipe-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [\n    RecipeComponent,\n    RecipeListComponent,\n    RecipeItemComponent,\n    RecipeDetailComponent,\n    RecipeStartComponent,\n    RecipeEditComponent,  \n  ],\n  exports: [            //no need to export the componenets because we are using these components only in recipe Module, not in any other module\n    // RecipeComponent,\n    // RecipeListComponent,\n    // RecipeItemComponent,\n    // RecipeDetailComponent,\n    // RecipeStartComponent,\n    // RecipeEditComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    RecipeRoutingModule,\n    SharedModule\n  ]\n})\nexport class RecipeModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Recipe } from '../recipe/recipe-list/recipe.model';\nimport { RecipeServiceService } from '../recipe/recipe-service.service';\nimport { DataStorageService } from './data-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipeResolverService implements Resolve<Recipe[]> {\n\n  constructor(private dataStorageService : DataStorageService, private recipeService : RecipeServiceService) { }\n\n  resolve(){\n    const recipes = this.recipeService.getRecipes();\n    if(recipes.length === 0)\n      return this.dataStorageService.fetchRecipes(); //no need to subscribe here because resolve method will do it for us\n    else\n      return recipes;\n  }\n}\n"],"sourceRoot":"webpack:///"}