{"version":3,"sources":["./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.module.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthResponse, AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: []\n})\nexport class AuthComponent implements OnInit {\n  isLoginMode = true;\n  isLoading = false;\n  error : string = null;\n\n  authObs : Observable<AuthResponse>;\n\n  constructor(private authService : AuthService, private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSwitchMode(){\n    this.isLoginMode = !this.isLoginMode;\n  }\n\n  onSubmit(authForm : NgForm){\n    this.error = null;\n    if(!authForm.valid)\n      return;\n\n    const email = authForm.value.email;\n    const password = authForm.value.password;\n    this.isLoading = true;  //to activate the loading spinner\n\n    if(!this.isLoginMode){\n      this.authObs = this.authService.signUp(email,password);\n    }\n    else{\n      this.authObs = this.authService.login(email,password);\n    }\n\n    //one of the two modes will be activated at one time, and as we need to do same code for subscribing\n    //in either mode, so we saved the subscription in an observable\n    //and then subscribe to that \n\n    this.authObs.subscribe( response => {\n      this.isLoading = false;\n      // on successful signup or login we will redirect the user to another page\n      this.router.navigate(['/recipes']);\n    }, errorRes => {\n      this.error = errorRes;\n      console.log(this.error)\n      this.isLoading = false;\n    })\n\n    authForm.reset();\n  }\n\n  onModalClose(){\n    this.error = null;\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\n\n        <div *ngIf=\"isLoading\">\n            <app-spinner></app-spinner>\n        </div>\n        <!-- <div class=\"alert alert-danger\" *ngIf=\"error\">\n            {{error}}\n        </div> -->\n        <app-alert [message]=\"error\" *ngIf=\"error\" (close)=\"onModalClose()\"></app-alert>\n        <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\" *ngIf=\"!isLoading\">\n            <div class=\"form-group\">\n                <label for=\"email\">E-mail</label>\n                <input \n                    type=\"email\" \n                    id=\"email\" \n                    class=\"form-control\"\n                    ngModel \n                    name=\"email\"\n                    required\n                    email\n                    minlength=\"6\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input \n                    type=\"password\" \n                    id=\"password\" \n                    class=\"form-control\"\n                    ngModel\n                    name=\"password\">\n            </div>\n            <div>\n                <button \n                    class=\"btn btn-primary\"\n                    type=\"submit\"\n                    [disabled]=\"!authForm.valid\"\n                    >\n                    {{ isLoginMode ? 'Login' : 'SignUp' }}</button> |             \n                <button class=\"btn btn-primary\" (click)=\"onSwitchMode()\" type=\"button\">\n                    Switch to {{ isLoginMode ? 'SignUp' : 'Login' }} mode\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthComponent } from './auth.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    RouterModule.forChild([  { path : '', component : AuthComponent} ])\n  ]\n})\nexport class AuthModule { }\n"],"sourceRoot":"webpack:///"}